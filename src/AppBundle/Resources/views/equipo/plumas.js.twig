
function cargarDatosTrPl(event) {

    var trpl = event.target;

    socket.on('trpl', function (data) {

        try{
            if(data == undefined || data == '') return false;

            var data = JSON.parse(data);

            data.forEach(function(item, index, ar){

                var anemometro_serie = trpl.series[0], shift_anm = anemometro_serie.data.length > 1200;  // shift if the series is longer than 20
                var aparejo_serie = trpl.series[1], shift_apa = aparejo_serie.data.length > 1200;  // shift if the series is longer than 20
                var llave_serie = trpl.series[2], shift_llave = llave_serie.data.length > 1200; // shift if the series is longer than 20
                var boca_pozo_serie = trpl.series[3], shift_bp = boca_pozo_serie.data.length > 1200; // shift if the series is longer than 20

                //hay que multiplicar por 1000 el unixtimestamp
                var tiempo     = item.t;
                var anemometro = item.anem;
                var aparejo    = item.hta;
                var llave      = item.llave;
                var boca_pozo  = item.bpozo;

                anemometro_serie.addPoint([tiempo, anemometro], false, shift_anm);
                aparejo_serie.addPoint([tiempo, aparejo], false, shift_apa);
                llave_serie.addPoint([tiempo, llave], false, shift_llave);
                boca_pozo_serie.addPoint([tiempo, boca_pozo], false, shift_bp);
            });


            trpl.redraw();
        }catch(e){
            console.log(e.name);
        }


    });

}

var equipoController = new EquipoController();

var paramsHstpl = {
    "equipo"     : "{{ equipo.webSocketNamespace }}",
    "tipo"       : PARAM_PLUMAS,
    "condicion"  : PARAM_CONDICION,
    "resolucion" : {{ resolucionPlumas }},
    "fecha_pozo" : PARAM_FECHA_POZO,
    "desde"      : DESDE_ORIGINAL,
    "hasta"      : HASTA_ORIGINAL
};

var pausadoHstpl  = false;

function recargarHstpl(min,max){

    var hstpl = $('#hstpl').highcharts();

    var anemometro_serie = hstpl.series[0];
    var aparejo_serie    = hstpl.series[1];
    var llave_serie      = hstpl.series[2];
    var boca_pozo_serie  = hstpl.series[3];

    //console.log(websocket_connection);

    paramsHstpl.desde = min;

    paramsHstpl.hasta = max;

    hstpl.showLoading('Cargando datos del servidor...');


    equipoController.getHistoricoEquipos(
            {{ equipo.id }},
            paramsHstpl,
            function (data) {
                anemometro_serie.setData(data.datos.anem, false, false, true);
                aparejo_serie.setData(data.datos.hta, false, false, true);
                llave_serie.setData(data.datos.llave, false, false, true);
                boca_pozo_serie.setData(data.datos.bpozo, false, false, true);

                hstpl.redraw();
                hstpl.hideLoading();
            },
            function (jqXHR) {
                removeOverlayBox('#hstpl');


                var resJson = (jqXHR.status != 404 )? jqXHR.responseJSON.detail : "No se ha encontrado el servidor especificado";

                $('#hstpl').html('<div class="callout callout-warning"><p>'+ resJson + '</p></div>');

                return false;
            },
            function () {
                removeOverlayBox('#hstpl');

                $('#hstpl').html('<div class="callout callout-warning"><p> Error de conexi贸n. El servidor no responde</p></div>');

                return false;
            }
    );

}

function afterSetExtremesHstpl(e){

    var extremo = null;

    if (e.trigger){
        pausadoHstpl = true;
        //si la seleccion se origin贸 desde un boton
        if (e.trigger == "rangeSelectorButton"){
            if(e.rangeSelectorButton.type == 'all'){
                pausadoHstpl = false;
            }

            extremo = new Date().getTime();

        }else if(e.trigger == "navigator" || e.trigger == "rangeSelectorInput" ){

            var min = new Date(e.min);

            var max = new Date(e.max);

            //console.log("seleccionado",e.min,e.max);

            //console.log("Fechas",min,max);

            if(e.min == e.max){
                alert("Debe existir al menos un segundo de diferencia entre las fechas de inicio y fin.");
                return false;
            }

            extremo = Math.round(e.max);
        }
    }else{
        //en el caso de que se lance sin ningun evento permitido (boton,navigator, etc)
        return false;
    }


    //console.log(pausadoHstpl);


    var desde = Math.round(e.min);

    var hasta = extremo;

    recargarHstpl(desde,hasta);
}

function establecerIntervaloRecargaHstpl(event){

    //si la condici贸n es actual == 1
    if(paramsHstpl.condicion){

        //configuro para que se recargue cada 5 minutos.
        setInterval(function() {
            if(!pausadoHstpl) {
                var tiempo_actual = new Date().getTime();

                //console.log(tiempo_actual);

                recargarHstpl(DESDE_ORIGINAL, tiempo_actual);
            }
        },300000);
    }

}

function inicializarHistoricoPlumas(){

    overlayBox('#hstpl');

    equipoController.getHistoricoEquipos(
            {{ equipo.id }},
            paramsHstpl,
            function(data){

                removeOverlayBox('#hstpl');

                if(data.status == 'error'){

                    $('#hstpl').html('<div class="callout callout-warning"><p>'+data.mensaje+'</p></div>');

                    return false;
                }

                $('#hstpl').highcharts('StockChart', {

                    chart: {
                        events: {
                            load: establecerIntervaloRecargaHstpl
                        },
                    },
                    legend: {
                        enabled: true
                    },
                    plotOptions: {
                        turboThreshold: 10
                    },
                    rangeSelector: {
                        selected: 4,
                        allButtonsEnabled: true,
                        inputDateFormat:     '%d-%m-%Y %H:%M',
                        inputEditDateFormat: '%d-%m-%Y %H:%M',
                        inputDateParser: function (value) {

                            value = value.split(/[ ]/);

                            var fecha = value[0];

                            var horario = value[1];

                            fecha = fecha.split(/[-]/);

                            horario = horario.split(/[:]/);

                            var date = new Date(fecha[2], fecha[1]-1, fecha[0], horario[0],horario[1].substring(0, 2),0,0);

                            var offset = 0;

                            {#if (!Highcharts.getOptions().global.useUTC) {#}
                                {#offset = new Date().getTimezoneOffset()*60*1000;#}
                            {#}#}


                            return date.getTime() - offset;

                        },
                        inputBoxWidth: 120,
                        buttons: [
                            {
                                type: 'minute',
                                count: 1,
                                text: 'min'
                            }, {
                                type: 'hour',
                                count: 2,
                                text: '2 hs'
                            }, {
                                type: 'hour',
                                count: 6,
                                text: '6 hs'
                            }, {
                                type: 'hour',
                                count: 12,
                                text: '12 hs'
                            },
                            {
                                type: 'all',
                                text: 'completo'
                            }
                        ],
                        buttonTheme: {
                            width: null
                        }
                    },
                    xAxis: {
                        events: {
                            afterSetExtremes: afterSetExtremesHstpl
                        },
                        //minRange: 10 * 1000, //un minuto
                        minRange: 125, //
                        minTickInterval:125
                    },
                    yAxis: [
                        { // Primary yAxis
                            labels: {
                                format: '{value}',
                                style: {
                                    color: Highcharts.getOptions().colors[1]
                                }
                            },
                            title: {
                                text: ' ',
                                style: {
                                    color: Highcharts.getOptions().colors[1]
                                }
                            },
                            min: 0,
                            max: 180,
                            tickInterval: 30,

                        }, { // Tertiary yAxis
                            gridLineWidth: 0,
                            title: {
                                text: 'Presi贸n (psi)',
                                style: {
                                    color: Highcharts.getOptions().colors[0]
                                }
                            },
                            labels: {
                                format: '{value}',
                                style: {
                                    color: Highcharts.getOptions().colors[0]
                                }
                            },
                            opposite: true,
                            min: 0,
                            max: 3000
                        }
                    ],
                    credits: {
                        enabled: false
                    },
                    scrollbar: {
                        liveRedraw: false
                    },
                    navigator: {
                        adaptToUpdatedData: false,
                        series: {
                            data: data.datos.anem
                        }
                    },
                    series: [
                        {
                            name: 'Anem贸metro',
                            type: 'line',
                            dashStyle: 'Dot',
                            color: '#D8D8D8',
                            lineWidth: 1,
                            yAxis: 0,
                            data: data.datos.anem,
                            tooltip: {
                                valueSuffix: ' km/h',
                                valueDecimals: 2
                            }
                        }, {
                            name: 'Aparejo',
                            data: data.datos.hta,
                            type: 'line',
                            color: Highcharts.getOptions().colors[1],
                            lineWidth: 1,
                            yAxis: 0,
                            tooltip: {
                                valueSuffix: ' klb',
                                valueDecimals: 2
                            }
                        }, {

                            name: 'Llave',
                            data: data.datos.llave,
                            type: 'line',
                            marker: {
                                enabled: false
                            },
                            color: Highcharts.getOptions().colors[2],
                            lineWidth: 1,
                            dashStyle: 'spline',
                            yAxis: 1,
                            tooltip: {
                                valueSuffix: ' psi',
                                valueDecimals: 2
                            }

                        }, {
                            name: 'Boca Pozo',
                            data: data.datos.bpozo,
                            type: 'line',
                            yAxis: 1,
                            tooltip: {
                                valueSuffix: ' psi',
                                valueDecimals: 2
                            }
                        }
                    ]
                });

            },
            function (jqXHR) {
                removeOverlayBox('#hstpl');


                var resJson = (jqXHR.status != 404 )? jqXHR.responseJSON.detail : "No se ha encontrado el servidor especificado";

                $('#hstpl').html('<div class="callout callout-warning"><p>'+ resJson + '</p></div>');

                return false;
            },
            function () {
                removeOverlayBox('#hstpl');

                $('#hstpl').html('<div class="callout callout-warning"><p> Error de conexi贸n. El servidor no responde</p></div>');

                return false;
            }

    );

}

$(document).ready(function(){

    {% if _configuracion.graficas.historicoPozo.enabled %}
    inicializarHistoricoPlumas();
    {% endif %}

    {% if _configuracion.graficas.tiempoRealPozo.enabled %}
    $('#trpl').highcharts({
        chart: {
            zoomType: 'xy',
            animation: false,
            events: {
                load: cargarDatosTrPl
            }
        },
        plotOptions: {
            series: {
                lineWidth: 1,
                states: {
                    hover:{
                        lineWidth: 1,
                    },
                },
                marker: {
                    enabled: false
                }
            }
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        credits: {
            enabled: false
        },
        xAxis: [{
            crosshair: true,
            labels: {
                rotation: -45
            },
//                    tickPixelInterval: 150,
//                    maxZoom: 20 * 1000,
            type: 'datetime',
            dateTimeLabelFormats: {
                millisecond: '%H:%M:%S',
            }
        }],
        yAxis: [
            { // Secondary yAxis
                gridLineWidth: 0,
                title: {
                    text: 'Anem贸metro (km/h)',
                    style: {
                        color: '#D8D8D8'
                    }
                },
                labels: {
                    format: '{value}',
                    style: {
                        color: '#D8D8D8'
                    }
                },
                min:0,
                max: 120

            }, { // Primary yAxis
                labels: {
                    format: '{value}',
                    style: {
                        color: Highcharts.getOptions().colors[1]
                    }
                },
                title: {
                    text: 'Aparejo (klb)',
                    style: {
                        color: Highcharts.getOptions().colors[1]
                    }
                },
                min:0,
                max: 180,
                tickInterval: 30,

            }, { // Tertiary yAxis
                gridLineWidth: 0,
                title: {
                    text: 'Presi贸n (psi)',
                    style: {
                        color: Highcharts.getOptions().colors[0]
                    }
                },
                labels: {
                    format: '{value}',
                    style: {
                        color: Highcharts.getOptions().colors[0]
                    }
                },
                opposite: true,
                min:0,
                max: 3000
            }
        ],
        tooltip: {
            shared: true
        },
        series: [
            {
                name: 'Anem贸metro',
                type: 'line',
                yAxis: 0,
                dashStyle: 'Dot',
                color: '#D8D8D8',
                lineWidth: 2,
                tooltip: {
                    valueSuffix: ' km/h'
                }
            }, {
                name: 'Aparejo',
                type: 'line',
                color: Highcharts.getOptions().colors[1],
                yAxis: 1,
                tooltip: {
                    valueSuffix: ' klb'
                }
            }, {

                name: 'Llave',
                type: 'line',
                color: Highcharts.getOptions().colors[2],
                yAxis: 2,
                tooltip: {
                    valueSuffix: ' psi'
                }

            }, {
                name: 'Boca Pozo',
                type: 'line',
                yAxis: 2,
                tooltip: {
                    valueSuffix: ' psi'
                }
            }
        ]
    });
    {% endif %}
});
