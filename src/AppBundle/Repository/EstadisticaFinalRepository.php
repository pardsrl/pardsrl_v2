<?php

namespace AppBundle\Repository;

/**
 * EstadisticaFinalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstadisticaFinalRepository extends \Doctrine\ORM\EntityRepository
{

    public function getQb()
    {
        return $this->createQueryBuilder('ef');
    }


    public function getDistribucionOperacionesPorEquipo($equipos,$desde,$hasta){

        $qb = $this->getQb()
            ->select('equipo.id','equipo.nombre','compania.acronimo','count(interv.id) cant')
            ->innerJoin('ef.intervencion','interv')
            ->innerJoin('interv.equipo','equipo')
            ->innerJoin('equipo.compania','compania')
            ->where('equipo IN (:equipos)')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('interv.equipo')
            ->setParameter('equipos',$equipos)
            ->setParameter('desde',$desde)
            ->setParameter('hasta',$hasta);

        return $qb;
    }


    public function getDistribucionOperacionesPorYacimiento($equipos,$desde,$hasta){

        $qb = $this->getQb()
            ->select('yacimiento.nombre','count(interv.id) cant')
            ->innerJoin('ef.intervencion','interv')
            ->innerJoin('interv.pozo','pozo')
            ->innerJoin('interv.equipo','equipo')
            ->innerJoin('pozo.yacimiento','yacimiento')
            ->where('equipo IN (:equipos)')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('pozo.yacimiento')
            ->setParameter('equipos',$equipos)
            ->setParameter('desde',$desde)
            ->setParameter('hasta',$hasta);
        return $qb;

    }

    public function getPromediosCanosHora($equipos, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('equipo.id', 'equipo.nombre', 'compania.acronimo', 'avg(ef.promTbg) promTbg')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('equipo.compania', 'compania')
            ->where('equipo IN (:equipos)')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('interv.equipo')
            ->setParameter('equipos', $equipos)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta);
        return $qb;
    }


    public function getPromedioVarillasHora($equipos, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('equipo.id', 'equipo.nombre', 'compania.acronimo', 'avg(ef.promVb) promVb')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('equipo.compania', 'compania')
            ->where('equipo IN (:equipos)')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('interv.equipo')
            ->setParameter('equipos', $equipos)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta);
        return $qb;
    }

    public function getFactorTiempoUtil($equipos, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('equipo.id', 'equipo.nombre', 'compania.acronimo', 'avg(ef.ftu) ftu')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('equipo.compania', 'compania')
            ->where('equipo IN (:equipos)')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('interv.equipo')
            ->setParameter('equipos', $equipos)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta);
        return $qb;
    }


    public function getDistribucionOperacionesIndividualesPorYacimiento($equipo,$desde,$hasta){

        $qb = $this->getQb()
            ->select('yacimiento.nombre','count(interv.id) cant')
            ->innerJoin('ef.intervencion','interv')
            ->innerJoin('interv.pozo','pozo')
            ->innerJoin('interv.equipo','equipo')
            ->innerJoin('pozo.yacimiento','yacimiento')
            ->where('equipo = :equipo')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->groupBy('pozo.yacimiento')
            ->setParameter('equipo',$equipo)
            ->setParameter('desde',$desde)
            ->setParameter('hasta',$hasta);

        return $qb;

    }

    public function getPromediosIndividualesCanosHora($equipo, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('interv.fecha','pozo.acronimo', 'ef.promTbg promTbg')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('interv.pozo', 'pozo')
            ->where('equipo = :equipo')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->setParameter('equipo', $equipo)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta)
	        ->orderBy('interv.fecha');

        return $qb;
    }

    public function getPromediosIndividualesVarillasHora($equipo, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('interv.fecha','pozo.acronimo', 'ef.promVb promVb')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('interv.pozo', 'pozo')
            ->where('equipo = :equipo')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->setParameter('equipo', $equipo)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta)
	        ->orderBy('interv.fecha');

        return $qb;
    }

    public function getIndividualesFactorTiempoUtil($equipo, $desde, $hasta)
    {

        $qb = $this->getQb()
            ->select('interv.fecha','pozo.acronimo', 'ef.ftu ftu')
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('interv.pozo', 'pozo')
            ->where('equipo = :equipo')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->setParameter('equipo', $equipo)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta)
	        ->orderBy('interv.fecha');

        return $qb;
    }

    public function getTrazadoPozosPorEquipo($equipo,$desde,$hasta)
    {

        $qb = $this->getQb()
            ->select(
                'pozo.acronimo pozo_acr',
                'pozo.nombre pozo_nombre',
                'pozo.latitud pozo_lat',
                'pozo.longitud pozo_lng',
                'interv.fecha interv_fecha'
            )
            ->innerJoin('ef.intervencion', 'interv')
            ->innerJoin('interv.equipo', 'equipo')
            ->innerJoin('equipo.compania', 'compania')
            ->innerJoin('interv.pozo', 'pozo')
            ->where('equipo = :equipo')
            ->andWhere('interv.fecha BETWEEN :desde AND :hasta')
            ->orderBy('interv.pozo','DESC')
            ->addOrderBy('interv.fecha','ASC')
            //->groupBy('interv.pozo')
            ->setParameter('equipo', $equipo)
            ->setParameter('desde', $desde)
            ->setParameter('hasta', $hasta);

        return $qb;
    }

}
